name: GitHub Classroom autograding and update moodle

on: 
  workflow_call:
    inputs:
      MOODLE:
        default: false
        required: false
        type: boolean
env:
  DEVOPS_DIR: devops
  GHSECRET: ${{ secrets.GITHUB_TOKEN }}

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  grading:
    # autograding an assignment in GitHub Classroom
    name: Autograding
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        # checkout the content of the repository
      - uses: ghwalin/autograder@master
        # run the test cases in .github/classroom/autograding.json
        id: autograding
      - name: grade-moodle-assignment
        # grade the assignment in Moodle, runs even after an error in autograding
        if: ${{ inputs.MOODLE }}
        run: |
          feedback="${{ steps.autograding.outputs.Feedback }}"
          grade=${{ steps.autograding.outputs.Points }}
          parts=(${grade//\// })
          points=${parts[0]"
          user=${{ github.actor }}
          
          repofull=${{ github.repository }}
          parts=(${repofull//\// })
          reponame=${parts[1]}
          template="${reponame/"-${{ github.actor }}"/""}"
          assignment=$template
                    
          wstoken="wstoken=${{ secrets.MOODLE_TOKEN }}"
          wsfunction="wsfunction=local_gradeassignments_update_grade"
          curl -X POST ${{ vars.MOODLE_URL}}?$wstoken&$wsfunction
               -H "Content-Type: application/x-www-form-urlencoded"
               --data-urlencode "assignment_name=$template"
               --data-urlencode "user_name=$user"
               --data-urlencode "points=$points"
               --data-urlencode "feedback=${{ steps.autograding.outputs.Feedback }}"
