name: GitHub Classroom lint the html code and update moodle

on:
  workflow_call:
    inputs:
      MOODLE:
        default: false
        required: false
        type: boolean
env:
  DEVOPS_DIR: devops
  GHSECRET: ${{ secrets.GITHUB_TOKEN }}

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  run-lint:
    if: ${{ !contains(github.actor, 'classroom') }}
    name: Lint the Code which is committed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
      - name: Lint Code Base
        uses: super-linter/super-linter@v6.5.1
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  report-to-moodle:
    needs: run-lint
    if: ${{ always() && !contains(github.actor, 'classroom') }}
    name: Report to Moodle that Linter was successfully
    runs-on: ubuntu-latest
    steps:
      - name: Output result
        run: echo ${{ needs.run-lint.result }}
      - name: Update assignment in Moodle
        run: |
          user="user_name=${{ github.actor }}"
          repofull=${{ github.repository }}
          parts=(${repofull//\// })
          reponame=${parts[1]}
          template="${reponame/"-${{ github.actor }}"/""}"
          assignment="assignment_name=$template"
          token=${{secrets.MOODLE_TOKEN2}}

          if [ ${{ needs.run-lint.result }} == 'success' ]; then
            points=2
            feedback="Lint erfolgreich"
          else
            points=1
            feedback="Lint meldet Fehler; Pr√ºfe die Action im GitHub Repo"
          fi
          echo $feedback
          
          curl -k -X POST "${{ vars.MOODLE_URL}}/webservice/rest/server.php?wstoken=$token&wsfunction=mod_externalassignment_update_grade" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          --data "$assignment" \
          --data "$user" \
          --data "points=$points" \
          --data "feedback=$feedback" \
          --data "max=2" \
          --data "externallink=${{ github.repository }}"
